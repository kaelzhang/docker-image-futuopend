name: Build and Push Multi-Platform Docker Images

on:
  push:
    branches:
      - master  # Trigger on push to the main branch

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [22.x]
    runs-on: ${{ matrix.os }}
    env:
      FUTU_VERSION: 9.2.5208

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm test
          npm run report:coverage
        env:
          CI: true

      - name: Upload results to Codecov
        if: runner.os == 'Linux'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      # Set up QEMU for multi-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub using Access Token
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      # Cache Docker layers (optional but recommended for faster builds)
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Build and push Docker images for multiple platforms
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ostai/futuopend:${{ env.FUTU_VERSION }}
            ostai/futuopend:latest
          platforms: linux/amd64
          build-args: |
            FUTU_VERSION=${{ env.FUTU_VERSION }}_Ubuntu16.04
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      # Move cache for future builds
      - name: Move cache
        if: always()
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
